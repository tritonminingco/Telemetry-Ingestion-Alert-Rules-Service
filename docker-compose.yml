version: '3.8'

services:
  # PostgreSQL with TimescaleDB extension
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: dsg-postgres
    environment:
      POSTGRES_DB: dsg_telemetry
      POSTGRES_USER: dsg_user
      POSTGRES_PASSWORD: dsg_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dsg_user -d dsg_telemetry"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: dsg-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dsg-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dsg.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  # Main application
  app:
    build: .
    container_name: dsg-telemetry-service
    environment:
      - DATABASE_URL=postgresql://dsg_user:dsg_password@postgres:5432/dsg_telemetry
      - REDIS_URL=redis://redis:6379
      - AUTH_TOKEN=your-secret-auth-token-here
      - DEBUG=true
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker for background tasks
  celery:
    build: .
    container_name: dsg-celery
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://dsg_user:dsg_password@postgres:5432/dsg_telemetry
      - REDIS_URL=redis://redis:6379
      - AUTH_TOKEN=your-secret-auth-token-here
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
