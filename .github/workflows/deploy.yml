name: Deploy to Production

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/telemetry-service:latest
          ${{ secrets.DOCKER_USERNAME }}/telemetry-service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production
      id: deploy
      run: |
        echo "Deploying to production..."
        # Add your deployment logic here
        # This could be deploying to Kubernetes, AWS, GCP, etc.
        echo "deployment-url=https://your-production-url.com" >> $GITHUB_OUTPUT
        echo "✅ Deployment completed successfully"

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🚀 Production deployment successful!"
        else
          echo "❌ Production deployment failed!"
        fi
